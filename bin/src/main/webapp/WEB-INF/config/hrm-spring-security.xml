<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

 
<!--     <security:http auto-config="true">
        <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
    </security:http> -->
 
     <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
        <security:form-login  login-page="/login" username-parameter="username" password-parameter="password"  />
        <security:csrf/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider>
          <security:jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password,enabled from user where username=?"
		  authorities-by-username-query=
		    "select user.username, role.name from role 
inner join user_role on user_role.roles_id= role.id 
inner join user on user_role.user_id = user.id
where user.username = ?  " />
        </security:authentication-provider>
    </security:authentication-manager>
</beans>